# Generated by Django 2.2 on 2020-01-17 22:14

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('email', models.CharField(max_length=50)),
                ('profil', models.TextField(null=True)),
                ('dateInscription', models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date d'inscription")),
                ('isExpert', models.BooleanField(default=False)),
                ('karma', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=30)),
                ('difficulte', models.IntegerField(default=0)),
                ('budgetActuel', models.IntegerField(default=0)),
                ('budgetCible', models.IntegerField(default=0)),
                ('description', models.CharField(default='', max_length=255)),
                ('datePublication', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de publication')),
                ('project_Main_Image', models.ImageField(null=True, upload_to='images/')),
                ('idCreateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Projet',
                'ordering': ['datePublication'],
                'permissions': (('evaluate_project', 'Evaluer un projet'),),
            },
        ),
        migrations.CreateModel(
            name='KarmaCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation', models.IntegerField(default=0)),
                ('oldEvaluation', models.IntegerField(default=0)),
                ('ExpertEvaluateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ExpertEvaluateur', to=settings.AUTH_USER_MODEL)),
                ('ExpertEvalue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ExpertEvalue', to=settings.AUTH_USER_MODEL)),
                ('idProject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Project')),
            ],
        ),
        migrations.CreateModel(
            name='InvestorLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contribution', models.IntegerField(default=0)),
                ('derniereTransaction', models.IntegerField(default=0)),
                ('dateTransaction', models.DateTimeField(default=django.utils.timezone.now)),
                ('idInvestisseur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('idProject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='blog.Project')),
            ],
        ),
        migrations.CreateModel(
            name='ExpertNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('noteBudget', models.IntegerField(default=0)),
                ('noteFaisabilite', models.IntegerField(default=0)),
                ('noteUtilite', models.IntegerField(default=0)),
                ('noteGlobale', models.IntegerField(default=0)),
                ('commentaire', models.CharField(default='', max_length=255)),
                ('idExpert', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('idProject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Project')),
            ],
        ),
    ]
